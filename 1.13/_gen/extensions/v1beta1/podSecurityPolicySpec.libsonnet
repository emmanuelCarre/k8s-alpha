{
  withAllowPrivilegeEscalation(allowPrivilegeEscalation): { allowPrivilegeEscalation: allowPrivilegeEscalation },
  withAllowedCapabilities(allowedCapabilities): { allowedCapabilities: if std.isArray(v=allowedCapabilities) then allowedCapabilities else [allowedCapabilities] },
  withAllowedCapabilitiesMixin(allowedCapabilities): { allowedCapabilities+: if std.isArray(v=allowedCapabilities) then allowedCapabilities else [allowedCapabilities] },
  withAllowedFlexVolumes(allowedFlexVolumes): { allowedFlexVolumes: if std.isArray(v=allowedFlexVolumes) then allowedFlexVolumes else [allowedFlexVolumes] },
  withAllowedFlexVolumesMixin(allowedFlexVolumes): { allowedFlexVolumes+: if std.isArray(v=allowedFlexVolumes) then allowedFlexVolumes else [allowedFlexVolumes] },
  withAllowedHostPaths(allowedHostPaths): { allowedHostPaths: if std.isArray(v=allowedHostPaths) then allowedHostPaths else [allowedHostPaths] },
  withAllowedHostPathsMixin(allowedHostPaths): { allowedHostPaths+: if std.isArray(v=allowedHostPaths) then allowedHostPaths else [allowedHostPaths] },
  withAllowedProcMountTypes(allowedProcMountTypes): { allowedProcMountTypes: if std.isArray(v=allowedProcMountTypes) then allowedProcMountTypes else [allowedProcMountTypes] },
  withAllowedProcMountTypesMixin(allowedProcMountTypes): { allowedProcMountTypes+: if std.isArray(v=allowedProcMountTypes) then allowedProcMountTypes else [allowedProcMountTypes] },
  withAllowedUnsafeSysctls(allowedUnsafeSysctls): { allowedUnsafeSysctls: if std.isArray(v=allowedUnsafeSysctls) then allowedUnsafeSysctls else [allowedUnsafeSysctls] },
  withAllowedUnsafeSysctlsMixin(allowedUnsafeSysctls): { allowedUnsafeSysctls+: if std.isArray(v=allowedUnsafeSysctls) then allowedUnsafeSysctls else [allowedUnsafeSysctls] },
  withDefaultAddCapabilities(defaultAddCapabilities): { defaultAddCapabilities: if std.isArray(v=defaultAddCapabilities) then defaultAddCapabilities else [defaultAddCapabilities] },
  withDefaultAddCapabilitiesMixin(defaultAddCapabilities): { defaultAddCapabilities+: if std.isArray(v=defaultAddCapabilities) then defaultAddCapabilities else [defaultAddCapabilities] },
  withDefaultAllowPrivilegeEscalation(defaultAllowPrivilegeEscalation): { defaultAllowPrivilegeEscalation: defaultAllowPrivilegeEscalation },
  withForbiddenSysctls(forbiddenSysctls): { forbiddenSysctls: if std.isArray(v=forbiddenSysctls) then forbiddenSysctls else [forbiddenSysctls] },
  withForbiddenSysctlsMixin(forbiddenSysctls): { forbiddenSysctls+: if std.isArray(v=forbiddenSysctls) then forbiddenSysctls else [forbiddenSysctls] },
  withFsGroup(fsGroup): { fsGroup: fsGroup },
  withHostIPC(hostIPC): { hostIPC: hostIPC },
  withHostNetwork(hostNetwork): { hostNetwork: hostNetwork },
  withHostPID(hostPID): { hostPID: hostPID },
  withHostPorts(hostPorts): { hostPorts: if std.isArray(v=hostPorts) then hostPorts else [hostPorts] },
  withHostPortsMixin(hostPorts): { hostPorts+: if std.isArray(v=hostPorts) then hostPorts else [hostPorts] },
  withPrivileged(privileged): { privileged: privileged },
  withReadOnlyRootFilesystem(readOnlyRootFilesystem): { readOnlyRootFilesystem: readOnlyRootFilesystem },
  withRequiredDropCapabilities(requiredDropCapabilities): { requiredDropCapabilities: if std.isArray(v=requiredDropCapabilities) then requiredDropCapabilities else [requiredDropCapabilities] },
  withRequiredDropCapabilitiesMixin(requiredDropCapabilities): { requiredDropCapabilities+: if std.isArray(v=requiredDropCapabilities) then requiredDropCapabilities else [requiredDropCapabilities] },
  withRunAsGroup(runAsGroup): { runAsGroup: runAsGroup },
  withRunAsUser(runAsUser): { runAsUser: runAsUser },
  withSeLinux(seLinux): { seLinux: seLinux },
  withSupplementalGroups(supplementalGroups): { supplementalGroups: supplementalGroups },
  withVolumes(volumes): { volumes: if std.isArray(v=volumes) then volumes else [volumes] },
  withVolumesMixin(volumes): { volumes+: if std.isArray(v=volumes) then volumes else [volumes] },
  mixin: self
}